{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "6421502015285575092"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name which is used to generate a short unique hash for each resource"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "uksouth",
        "germanywestcentral",
        "francecentral",
        "eastus",
        "canadaeast",
        "eastus2",
        "japaneast",
        "koreacentral",
        "northcentralus",
        "australiaeast",
        "southcentralus",
        "switzerlandnorth",
        "westeurope",
        "westus",
        "westus3"
      ],
      "metadata": {
        "azd": {
          "type": "location"
        },
        "description": "Primary location for all resources"
      },
      "minLength": 1
    },
    "openAiResourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the resource group for the OpenAI resource"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": ""
    },
    "aiHubName": {
      "type": "string",
      "defaultValue": ""
    },
    "aiProjectName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure AI Foundry project name. If ommited will be generated"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The application insights resource name. If ommited will be generated"
      }
    },
    "openAiName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Open AI resource name. If ommited will be generated"
      }
    },
    "openAiConnectionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Open AI connection name. If ommited will use a default value"
      }
    },
    "openAiContentSafetyConnectionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Open AI content safety connection name. If ommited will use a default value"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure Storage Account resource name. If ommited will be generated"
      }
    },
    "searchConnectionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure Search connection name. If ommited will use a default value"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The log analytics workspace name. If ommited will be generated"
      }
    },
    "useApplicationInsights": {
      "type": "bool",
      "defaultValue": true
    },
    "useContainerRegistry": {
      "type": "bool",
      "defaultValue": true
    },
    "useSearch": {
      "type": "bool",
      "defaultValue": true
    },
    "openAiApiVersion": {
      "type": "string",
      "defaultValue": "2023-03-15-preview",
      "metadata": {
        "description": "The API version of the OpenAI resource"
      }
    },
    "openAiType": {
      "type": "string",
      "defaultValue": "azure",
      "metadata": {
        "description": "The type of the OpenAI resource"
      }
    },
    "searchServiceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the search service"
      }
    },
    "cosmosAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the Cosmos account"
      }
    },
    "openAiEmbeddingDeploymentName": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "metadata": {
        "description": "The name of the OpenAI embedding deployment"
      }
    },
    "aiSearchIndexName": {
      "type": "string",
      "defaultValue": "contoso-products",
      "metadata": {
        "description": "The name of the AI search index"
      }
    },
    "cosmosDatabaseName": {
      "type": "string",
      "defaultValue": "contoso-outdoor",
      "metadata": {
        "description": "The name of the Cosmos database"
      }
    },
    "cosmosContainerName": {
      "type": "string",
      "defaultValue": "customers",
      "metadata": {
        "description": "The name of the Cosmos container"
      }
    },
    "openAiDeploymentName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the OpenAI deployment"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "runningOnGh": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Whether the deployment is running on GitHub Actions"
      }
    },
    "runningOnAdo": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Whether the deployment is running on Azure DevOps Pipeline"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "loadTesting": "lt-",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "$fxv#1": {
      "deployments": [
        {
          "name": "gpt-4o-mini",
          "model": {
            "format": "OpenAI",
            "name": "gpt-4o-mini"
          },
          "sku": {
            "name": "GlobalStandard",
            "capacity": 30
          }
        },
        {
          "name": "text-embedding-ada-002",
          "model": {
            "format": "OpenAI",
            "name": "text-embedding-ada-002"
          },
          "sku": {
            "name": "Standard",
            "capacity": 30
          }
        },
        {
          "name": "gpt-4",
          "model": {
            "format": "OpenAI",
            "name": "gpt-4o"
          },
          "sku": {
            "name": "GlobalStandard",
            "capacity": 20
          }
        }
      ]
    },
    "abbrs": "[variables('$fxv#0')]",
    "aiConfig": "[variables('$fxv#1')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "prefix": "[toLower(format('{0}-{1}', parameters('environmentName'), variables('resourceToken')))]",
    "principalType": "[if(and(empty(parameters('runningOnGh')), empty(parameters('runningOnAdo'))), 'User', 'ServicePrincipal')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('rg-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "managed-identity",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('id-{0}', variables('resourceToken'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "18406047425672458998"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "cognitiveServicesUserRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('azd-service-name', parameters('name')))]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), variables('cognitiveServicesUserRoleDefinitionId'))]",
              "properties": {
                "roleDefinitionId": "[variables('cognitiveServicesUserRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "managedIdentityName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2018-11-30').clientId]"
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2018-11-30').principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "hubName": "[if(not(empty(parameters('aiHubName'))), createObject('value', parameters('aiHubName')), createObject('value', format('ai-hub-{0}', variables('resourceToken'))))]",
          "projectName": "[if(not(empty(parameters('aiProjectName'))), createObject('value', parameters('aiProjectName')), createObject('value', format('ai-project-{0}', variables('resourceToken'))))]",
          "keyVaultName": "[if(not(empty(parameters('keyVaultName'))), createObject('value', parameters('keyVaultName')), createObject('value', format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))))]",
          "storageAccountName": "[if(not(empty(parameters('storageAccountName'))), createObject('value', parameters('storageAccountName')), createObject('value', format('{0}{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken'))))]",
          "openAiName": "[if(not(empty(parameters('openAiName'))), createObject('value', parameters('openAiName')), createObject('value', format('aoai-{0}', variables('resourceToken'))))]",
          "openAiConnectionName": "[if(not(empty(parameters('openAiConnectionName'))), createObject('value', parameters('openAiConnectionName')), createObject('value', 'aoai-connection'))]",
          "openAiContentSafetyConnectionName": "[if(not(empty(parameters('openAiContentSafetyConnectionName'))), createObject('value', parameters('openAiContentSafetyConnectionName')), createObject('value', 'aoai-content-safety-connection'))]",
          "openAiModelDeployments": {
            "value": "[array(if(contains(variables('aiConfig'), 'deployments'), variables('aiConfig').deployments, createArray()))]"
          },
          "logAnalyticsName": "[if(not(parameters('useApplicationInsights')), createObject('value', ''), if(not(empty(parameters('logAnalyticsWorkspaceName'))), createObject('value', parameters('logAnalyticsWorkspaceName')), createObject('value', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken')))))]",
          "applicationInsightsName": "[if(not(parameters('useApplicationInsights')), createObject('value', ''), if(not(empty(parameters('applicationInsightsName'))), createObject('value', parameters('applicationInsightsName')), createObject('value', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken')))))]",
          "containerRegistryName": "[if(not(parameters('useContainerRegistry')), createObject('value', ''), if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken')))))]",
          "searchServiceName": "[if(not(parameters('useSearch')), createObject('value', ''), if(not(empty(parameters('searchServiceName'))), createObject('value', parameters('searchServiceName')), createObject('value', format('{0}{1}', variables('abbrs').searchSearchServices, variables('resourceToken')))))]",
          "searchConnectionName": "[if(not(parameters('useSearch')), createObject('value', ''), if(not(empty(parameters('searchConnectionName'))), createObject('value', parameters('searchConnectionName')), createObject('value', 'search-service-connection')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "1667339270162404755"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Primary location for all resources"
              }
            },
            "hubName": {
              "type": "string",
              "metadata": {
                "description": "The AI Hub resource name."
              }
            },
            "projectName": {
              "type": "string",
              "metadata": {
                "description": "The AI Project resource name."
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The Key Vault resource name."
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The Storage Account resource name."
              }
            },
            "openAiName": {
              "type": "string",
              "metadata": {
                "description": "The Open AI resource name."
              }
            },
            "openAiConnectionName": {
              "type": "string",
              "metadata": {
                "description": "The Open AI connection name."
              }
            },
            "openAiModelDeployments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The Open AI model deployments."
              }
            },
            "openAiContentSafetyConnectionName": {
              "type": "string",
              "metadata": {
                "description": "The Open AI content safety connection name."
              }
            },
            "logAnalyticsName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Log Analytics resource name."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Application Insights resource name."
              }
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Container Registry resource name."
              }
            },
            "searchServiceName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Azure Search resource name."
              }
            },
            "searchConnectionName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The Azure Search connection name."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "hubDependencies",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "logAnalyticsName": {
                    "value": "[parameters('logAnalyticsName')]"
                  },
                  "openAiName": {
                    "value": "[parameters('openAiName')]"
                  },
                  "openAiModelDeployments": {
                    "value": "[parameters('openAiModelDeployments')]"
                  },
                  "searchServiceName": {
                    "value": "[parameters('searchServiceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "5490921921639473229"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the key vault"
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage account"
                      }
                    },
                    "openAiName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the OpenAI cognitive services"
                      }
                    },
                    "openAiModelDeployments": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Array of OpenAI model deployments"
                      }
                    },
                    "logAnalyticsName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the Log Analytics workspace"
                      }
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the Application Insights instance"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the container registry"
                      }
                    },
                    "searchServiceName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the Azure Cognitive Search service"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "keyvault",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "name": {
                            "value": "[parameters('keyVaultName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "10112863793640715157"
                            },
                            "description": "Creates an Azure Key Vault."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "principalId": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults",
                              "apiVersion": "2022-07-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "tenantId": "[subscription().tenantId]",
                                "sku": {
                                  "family": "A",
                                  "name": "standard"
                                },
                                "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
                              }
                            }
                          ],
                          "outputs": {
                            "endpoint": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "storageAccount",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "name": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "containers": {
                            "value": [
                              {
                                "name": "default"
                              }
                            ]
                          },
                          "files": {
                            "value": [
                              {
                                "name": "default"
                              }
                            ]
                          },
                          "queues": {
                            "value": [
                              {
                                "name": "default"
                              }
                            ]
                          },
                          "tables": {
                            "value": [
                              {
                                "name": "default"
                              }
                            ]
                          },
                          "corsRules": {
                            "value": [
                              {
                                "allowedOrigins": [
                                  "https://mlworkspace.azure.ai",
                                  "https://ml.azure.com",
                                  "https://*.ml.azure.com",
                                  "https://ai.azure.com",
                                  "https://*.ai.azure.com",
                                  "https://mlworkspacecanary.azure.ai",
                                  "https://mlworkspace.azureml-test.net"
                                ],
                                "allowedMethods": [
                                  "GET",
                                  "HEAD",
                                  "POST",
                                  "PUT",
                                  "DELETE",
                                  "OPTIONS",
                                  "PATCH"
                                ],
                                "maxAgeInSeconds": 1800,
                                "exposedHeaders": [
                                  "*"
                                ],
                                "allowedHeaders": [
                                  "*"
                                ]
                              }
                            ]
                          },
                          "deleteRetentionPolicy": {
                            "value": {
                              "allowPermanentDelete": false,
                              "enabled": false
                            }
                          },
                          "shareDeleteRetentionPolicy": {
                            "value": {
                              "enabled": true,
                              "days": 7
                            }
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "15795003261726250691"
                            },
                            "description": "Creates an Azure storage account."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "accessTier": {
                              "type": "string",
                              "defaultValue": "Hot",
                              "allowedValues": [
                                "Cool",
                                "Hot",
                                "Premium"
                              ]
                            },
                            "allowBlobPublicAccess": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "allowCrossTenantReplication": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "allowSharedKeyAccess": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "containers": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "corsRules": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "defaultToOAuthAuthentication": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deleteRetentionPolicy": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "dnsEndpointType": {
                              "type": "string",
                              "defaultValue": "Standard",
                              "allowedValues": [
                                "AzureDnsZone",
                                "Standard"
                              ]
                            },
                            "files": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "StorageV2"
                            },
                            "minimumTlsVersion": {
                              "type": "string",
                              "defaultValue": "TLS1_2"
                            },
                            "queues": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "shareDeleteRetentionPolicy": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "supportsHttpsTrafficOnly": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "tables": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "networkAcls": {
                              "type": "object",
                              "defaultValue": {
                                "bypass": "AzureServices",
                                "defaultAction": "Allow"
                              }
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "Enabled",
                              "allowedValues": [
                                "Enabled",
                                "Disabled"
                              ]
                            },
                            "sku": {
                              "type": "object",
                              "defaultValue": {
                                "name": "Standard_LRS"
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "storage::blobServices::container",
                                "count": "[length(parameters('containers'))]"
                              },
                              "condition": "[not(empty(parameters('containers')))]",
                              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                              "apiVersion": "2023-01-01",
                              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
                              "properties": {
                                "publicAccess": "[if(contains(parameters('containers')[copyIndex()], 'publicAccess'), parameters('containers')[copyIndex()].publicAccess, 'None')]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
                              ]
                            },
                            {
                              "copy": {
                                "name": "storage::queueServices::queue",
                                "count": "[length(parameters('queues'))]"
                              },
                              "condition": "[not(empty(parameters('queues')))]",
                              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                              "apiVersion": "2023-01-01",
                              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
                              "properties": {
                                "metadata": {}
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('containers')))]",
                              "type": "Microsoft.Storage/storageAccounts/blobServices",
                              "apiVersion": "2023-01-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                              "properties": {
                                "cors": {
                                  "corsRules": "[parameters('corsRules')]"
                                },
                                "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('files')))]",
                              "type": "Microsoft.Storage/storageAccounts/fileServices",
                              "apiVersion": "2023-01-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                              "properties": {
                                "cors": {
                                  "corsRules": "[parameters('corsRules')]"
                                },
                                "shareDeleteRetentionPolicy": "[parameters('shareDeleteRetentionPolicy')]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('queues')))]",
                              "type": "Microsoft.Storage/storageAccounts/queueServices",
                              "apiVersion": "2023-01-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                              "properties": {},
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('tables')))]",
                              "type": "Microsoft.Storage/storageAccounts/tableServices",
                              "apiVersion": "2023-01-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                              "properties": {},
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2023-01-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "kind": "[parameters('kind')]",
                              "sku": "[parameters('sku')]",
                              "properties": {
                                "accessTier": "[parameters('accessTier')]",
                                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                                "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                                "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                                "dnsEndpointType": "[parameters('dnsEndpointType')]",
                                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                                "networkAcls": "[parameters('networkAcls')]",
                                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                                "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]"
                              }
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "primaryEndpoints": {
                              "type": "object",
                              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-01-01').primaryEndpoints]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('logAnalyticsName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "logAnalytics",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "name": {
                            "value": "[parameters('logAnalyticsName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "6799050864532564054"
                            },
                            "description": "Creates a Log Analytics workspace."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.OperationalInsights/workspaces",
                              "apiVersion": "2021-12-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "retentionInDays": 30,
                                "features": {
                                  "searchVersion": 1
                                },
                                "sku": {
                                  "name": "PerGB2018"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[and(not(empty(parameters('applicationInsightsName'))), not(empty(parameters('logAnalyticsName'))))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "applicationInsights",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "name": {
                            "value": "[parameters('applicationInsightsName')]"
                          },
                          "logAnalyticsWorkspaceId": "[if(not(empty(parameters('logAnalyticsName'))), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.id.value), createObject('value', ''))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "1668976953266806860"
                            },
                            "description": "Creates an Application Insights instance based on an existing Log Analytics workspace."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "dashboardName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "logAnalyticsWorkspaceId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/components",
                              "apiVersion": "2020-02-02",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "kind": "web",
                              "properties": {
                                "Application_Type": "web",
                                "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                              }
                            },
                            {
                              "condition": "[not(empty(parameters('dashboardName')))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "application-insights-dashboard",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "name": {
                                    "value": "[parameters('dashboardName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "applicationInsightsName": {
                                    "value": "[parameters('name')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.36.177.2456",
                                      "templateHash": "18292703974674172388"
                                    },
                                    "description": "Creates a dashboard for an Application Insights instance."
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "applicationInsightsName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {}
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Portal/dashboards",
                                      "apiVersion": "2020-09-01-preview",
                                      "name": "[parameters('name')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "lenses": [
                                          {
                                            "order": 0,
                                            "parts": [
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 0,
                                                  "colSpan": 2,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "id",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart",
                                                  "asset": {
                                                    "idInputName": "id",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "overview"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 2,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "ProactiveDetection"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 3,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "ResourceId",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "endTime": null,
                                                        "createdTime": "2018-05-04T01:20:33.345Z",
                                                        "isInitialTime": true,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 5,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "endTime": null,
                                                        "createdTime": "2018-05-08T18:47:35.237Z",
                                                        "isInitialTime": true,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    },
                                                    {
                                                      "name": "ConfigurationId",
                                                      "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Usage",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 3,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "endTime": null,
                                                        "createdTime": "2018-05-04T01:22:35.782Z",
                                                        "isInitialTime": true,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Reliability",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 7,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ResourceId",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    },
                                                    {
                                                      "name": "DataModel",
                                                      "value": {
                                                        "version": "1.0.0",
                                                        "timeContext": {
                                                          "durationMs": 86400000,
                                                          "createdTime": "2018-05-04T23:42:40.072Z",
                                                          "isInitialTime": false,
                                                          "grain": 1,
                                                          "useDashboardTimeRange": false
                                                        }
                                                      },
                                                      "isOptional": true
                                                    },
                                                    {
                                                      "name": "ConfigurationId",
                                                      "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart",
                                                  "isAdapter": true,
                                                  "asset": {
                                                    "idInputName": "ResourceId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "failures"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Responsiveness\r\n",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 11,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ResourceId",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    },
                                                    {
                                                      "name": "DataModel",
                                                      "value": {
                                                        "version": "1.0.0",
                                                        "timeContext": {
                                                          "durationMs": 86400000,
                                                          "createdTime": "2018-05-04T23:43:37.804Z",
                                                          "isInitialTime": false,
                                                          "grain": 1,
                                                          "useDashboardTimeRange": false
                                                        }
                                                      },
                                                      "isOptional": true
                                                    },
                                                    {
                                                      "name": "ConfigurationId",
                                                      "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart",
                                                  "isAdapter": true,
                                                  "asset": {
                                                    "idInputName": "ResourceId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "performance"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 12,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Browser",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 15,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "MetricsExplorerJsonDefinitionId",
                                                      "value": "BrowserPerformanceTimelineMetrics"
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "createdTime": "2018-05-08T12:16:27.534Z",
                                                        "isInitialTime": false,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    },
                                                    {
                                                      "name": "CurrentFilter",
                                                      "value": {
                                                        "eventTypes": [
                                                          4,
                                                          1,
                                                          3,
                                                          5,
                                                          2,
                                                          6,
                                                          13
                                                        ],
                                                        "typeFacets": {},
                                                        "isPermissive": false
                                                      }
                                                    },
                                                    {
                                                      "name": "id",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "browser"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "sessions/count",
                                                              "aggregationType": 5,
                                                              "namespace": "microsoft.insights/components/kusto",
                                                              "metricVisualization": {
                                                                "displayName": "Sessions",
                                                                "color": "#47BDF5"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "users/count",
                                                              "aggregationType": 5,
                                                              "namespace": "microsoft.insights/components/kusto",
                                                              "metricVisualization": {
                                                                "displayName": "Users",
                                                                "color": "#7E58FF"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Unique sessions and users",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "segmentationUsers"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "requests/failed",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Failed requests",
                                                                "color": "#EC008C"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Failed requests",
                                                          "visualization": {
                                                            "chartType": 3,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "failures"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "requests/duration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Server response time",
                                                                "color": "#00BCF2"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Server response time",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "performance"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 12,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/networkDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Page load network connect time",
                                                                "color": "#7E58FF"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/processingDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Client processing time",
                                                                "color": "#44F1C8"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/sendDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Send request time",
                                                                "color": "#EB9371"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/receiveDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Receiving response time",
                                                                "color": "#0672F1"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average page load time breakdown",
                                                          "visualization": {
                                                            "chartType": 3,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "availabilityResults/availabilityPercentage",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Availability",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average availability",
                                                          "visualization": {
                                                            "chartType": 3,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "availability"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "exceptions/server",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Server exceptions",
                                                                "color": "#47BDF5"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "dependencies/failed",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Dependency failures",
                                                                "color": "#7E58FF"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Server exceptions and Dependency failures",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/processorCpuPercentage",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Processor time",
                                                                "color": "#47BDF5"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/processCpuPercentage",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Process CPU",
                                                                "color": "#7E58FF"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average processor and process CPU utilization",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 12,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "exceptions/browser",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Browser exceptions",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Browser exceptions",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 8,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "availabilityResults/count",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Availability test results count",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Availability test results count",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 8,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/processIOBytesPerSecond",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Process IO rate",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average process I/O rate",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 8,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/memoryAvailableBytes",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Available memory",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average available memory",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "connectionString": {
                              "type": "string",
                              "value": "[replace(reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString, '00000000-0000-0000-0000-000000000000', reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey)]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                            },
                            "instrumentationKey": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'logAnalytics')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('containerRegistryName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "containerRegistry",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "name": {
                            "value": "[parameters('containerRegistryName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "5579757098889212448"
                            },
                            "description": "Creates an Azure Container Registry."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "adminUserEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Indicates whether admin user is enabled"
                              }
                            },
                            "anonymousPullEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Indicates whether anonymous pull is enabled"
                              }
                            },
                            "azureADAuthenticationAsArmPolicy": {
                              "type": "object",
                              "defaultValue": {
                                "status": "enabled"
                              },
                              "metadata": {
                                "description": "Azure ad authentication as arm policy settings"
                              }
                            },
                            "dataEndpointEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Indicates whether data endpoint is enabled"
                              }
                            },
                            "encryption": {
                              "type": "object",
                              "defaultValue": {
                                "status": "disabled"
                              },
                              "metadata": {
                                "description": "Encryption settings"
                              }
                            },
                            "exportPolicy": {
                              "type": "object",
                              "defaultValue": {
                                "status": "enabled"
                              },
                              "metadata": {
                                "description": "Export policy settings"
                              }
                            },
                            "metadataSearch": {
                              "type": "string",
                              "defaultValue": "Disabled",
                              "metadata": {
                                "description": "Metadata search settings"
                              }
                            },
                            "networkRuleBypassOptions": {
                              "type": "string",
                              "defaultValue": "AzureServices",
                              "metadata": {
                                "description": "Options for bypassing network rules"
                              }
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "Enabled",
                              "metadata": {
                                "description": "Public network access setting"
                              }
                            },
                            "quarantinePolicy": {
                              "type": "object",
                              "defaultValue": {
                                "status": "disabled"
                              },
                              "metadata": {
                                "description": "Quarantine policy settings"
                              }
                            },
                            "retentionPolicy": {
                              "type": "object",
                              "defaultValue": {
                                "days": 7,
                                "status": "disabled"
                              },
                              "metadata": {
                                "description": "Retention policy settings"
                              }
                            },
                            "scopeMaps": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Scope maps setting"
                              }
                            },
                            "sku": {
                              "type": "object",
                              "defaultValue": {
                                "name": "Basic"
                              },
                              "metadata": {
                                "description": "SKU settings"
                              }
                            },
                            "softDeletePolicy": {
                              "type": "object",
                              "defaultValue": {
                                "retentionDays": 7,
                                "status": "disabled"
                              },
                              "metadata": {
                                "description": "Soft delete policy settings"
                              }
                            },
                            "trustPolicy": {
                              "type": "object",
                              "defaultValue": {
                                "type": "Notary",
                                "status": "disabled"
                              },
                              "metadata": {
                                "description": "Trust policy settings"
                              }
                            },
                            "zoneRedundancy": {
                              "type": "string",
                              "defaultValue": "Disabled",
                              "metadata": {
                                "description": "Zone redundancy setting"
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The log analytics workspace ID used for logging and monitoring"
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "containerRegistry::scopeMap",
                                "count": "[length(parameters('scopeMaps'))]"
                              },
                              "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
                              "apiVersion": "2023-11-01-preview",
                              "name": "[format('{0}/{1}', parameters('name'), parameters('scopeMaps')[copyIndex()].name)]",
                              "properties": "[parameters('scopeMaps')[copyIndex()].properties]",
                              "dependsOn": [
                                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.ContainerRegistry/registries",
                              "apiVersion": "2023-11-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "sku": "[parameters('sku')]",
                              "properties": {
                                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                                "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                                "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                                "encryption": "[parameters('encryption')]",
                                "metadataSearch": "[parameters('metadataSearch')]",
                                "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                                "policies": {
                                  "quarantinePolicy": "[parameters('quarantinePolicy')]",
                                  "trustPolicy": "[parameters('trustPolicy')]",
                                  "retentionPolicy": "[parameters('retentionPolicy')]",
                                  "exportPolicy": "[parameters('exportPolicy')]",
                                  "azureADAuthenticationAsArmPolicy": "[parameters('azureADAuthenticationAsArmPolicy')]",
                                  "softDeletePolicy": "[parameters('softDeletePolicy')]"
                                },
                                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                                "zoneRedundancy": "[parameters('zoneRedundancy')]"
                              }
                            },
                            {
                              "condition": "[not(empty(parameters('workspaceId')))]",
                              "type": "Microsoft.Insights/diagnosticSettings",
                              "apiVersion": "2021-05-01-preview",
                              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
                              "name": "registry-diagnostics",
                              "properties": {
                                "workspaceId": "[parameters('workspaceId')]",
                                "logs": [
                                  {
                                    "category": "ContainerRegistryRepositoryEvents",
                                    "enabled": true
                                  },
                                  {
                                    "category": "ContainerRegistryLoginEvents",
                                    "enabled": true
                                  }
                                ],
                                "metrics": [
                                  {
                                    "category": "AllMetrics",
                                    "enabled": true,
                                    "timeGrain": "PT1M"
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                            },
                            "loginServer": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "cognitiveServices",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "name": {
                            "value": "[parameters('openAiName')]"
                          },
                          "kind": {
                            "value": "AIServices"
                          },
                          "deployments": {
                            "value": "[parameters('openAiModelDeployments')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "14481261181960439752"
                            },
                            "description": "Creates an Azure Cognitive Services instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "customSubDomainName": {
                              "type": "string",
                              "defaultValue": "[parameters('name')]",
                              "metadata": {
                                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
                              }
                            },
                            "deployments": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "AIServices"
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "Enabled",
                              "allowedValues": [
                                "Enabled",
                                "Disabled"
                              ]
                            },
                            "sku": {
                              "type": "object",
                              "defaultValue": {
                                "name": "S0"
                              }
                            },
                            "allowedIpRules": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "networkAcls": {
                              "type": "object",
                              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.CognitiveServices/accounts",
                              "apiVersion": "2023-05-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "customSubDomainName": "[parameters('customSubDomainName')]",
                                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                                "networkAcls": "[parameters('networkAcls')]"
                              },
                              "sku": "[parameters('sku')]"
                            },
                            {
                              "copy": {
                                "name": "deployment",
                                "count": "[length(parameters('deployments'))]",
                                "mode": "serial",
                                "batchSize": 1
                              },
                              "type": "Microsoft.CognitiveServices/accounts/deployments",
                              "apiVersion": "2023-05-01",
                              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
                              "properties": {
                                "model": "[parameters('deployments')[copyIndex()].model]",
                                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
                              },
                              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 10))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "endpoint": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
                            },
                            "endpoints": {
                              "type": "object",
                              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoints]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "skuName": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').sku.name]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "search",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('searchServiceName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "semanticSearch": {
                            "value": "standard"
                          },
                          "disableLocalAuth": {
                            "value": true
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "11957198176058204457"
                            },
                            "description": "Creates an Azure AI Search instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "sku": {
                              "type": "object",
                              "defaultValue": {
                                "name": "standard"
                              }
                            },
                            "authOptions": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "disableLocalAuth": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "disabledDataExfiltrationOptions": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "encryptionWithCmk": {
                              "type": "object",
                              "defaultValue": {
                                "enforcement": "Unspecified"
                              }
                            },
                            "hostingMode": {
                              "type": "string",
                              "defaultValue": "default",
                              "allowedValues": [
                                "default",
                                "highDensity"
                              ]
                            },
                            "networkRuleSet": {
                              "type": "object",
                              "defaultValue": {
                                "bypass": "None",
                                "ipRules": []
                              }
                            },
                            "partitionCount": {
                              "type": "int",
                              "defaultValue": 1
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "enabled",
                              "allowedValues": [
                                "enabled",
                                "disabled"
                              ]
                            },
                            "replicaCount": {
                              "type": "int",
                              "defaultValue": 1
                            },
                            "semanticSearch": {
                              "type": "string",
                              "defaultValue": "disabled",
                              "allowedValues": [
                                "disabled",
                                "free",
                                "standard"
                              ]
                            }
                          },
                          "variables": {
                            "searchIdentityProvider": "[if(equals(parameters('sku').name, 'free'), null(), createObject('type', 'SystemAssigned'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Search/searchServices",
                              "apiVersion": "2021-04-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "identity": "[variables('searchIdentityProvider')]",
                              "properties": {
                                "authOptions": "[if(parameters('disableLocalAuth'), null(), parameters('authOptions'))]",
                                "disableLocalAuth": "[parameters('disableLocalAuth')]",
                                "disabledDataExfiltrationOptions": "[parameters('disabledDataExfiltrationOptions')]",
                                "encryptionWithCmk": "[parameters('encryptionWithCmk')]",
                                "hostingMode": "[parameters('hostingMode')]",
                                "networkRuleSet": "[parameters('networkRuleSet')]",
                                "partitionCount": "[parameters('partitionCount')]",
                                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                                "replicaCount": "[parameters('replicaCount')]",
                                "semanticSearch": "[parameters('semanticSearch')]"
                              },
                              "sku": "[parameters('sku')]"
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
                            },
                            "endpoint": {
                              "type": "string",
                              "value": "[format('https://{0}.search.windows.net/', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "principalId": {
                              "type": "string",
                              "value": "[if(not(empty(variables('searchIdentityProvider'))), reference(resourceId('Microsoft.Search/searchServices', parameters('name')), '2021-04-01-preview', 'full').identity.principalId, '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "keyVaultId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.id.value]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value]"
                    },
                    "keyVaultEndpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.endpoint.value]"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.id.value]"
                    },
                    "storageAccountName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccount'), '2022-09-01').outputs.name.value]"
                    },
                    "containerRegistryId": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('containerRegistryName'))), reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.id.value, '')]"
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('containerRegistryName'))), reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.name.value, '')]"
                    },
                    "containerRegistryEndpoint": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('containerRegistryName'))), reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.loginServer.value, '')]"
                    },
                    "applicationInsightsId": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('applicationInsightsName'))), reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.id.value, '')]"
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('applicationInsightsName'))), reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.name.value, '')]"
                    },
                    "applicationInsightsConnectionString": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('applicationInsightsName'))), reference(resourceId('Microsoft.Resources/deployments', 'applicationInsights'), '2022-09-01').outputs.connectionString.value, '')]"
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('logAnalyticsName'))), reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.id.value, '')]"
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('logAnalyticsName'))), reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics'), '2022-09-01').outputs.name.value, '')]"
                    },
                    "openAiId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.id.value]"
                    },
                    "openAiName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.name.value]"
                    },
                    "openAiEndpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cognitiveServices'), '2022-09-01').outputs.endpoints.value['OpenAI Language Model Instance API']]"
                    },
                    "searchServiceId": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'search'), '2022-09-01').outputs.id.value, '')]"
                    },
                    "searchServiceName": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'search'), '2022-09-01').outputs.name.value, '')]"
                    },
                    "searchServiceEndpoint": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('searchServiceName'))), reference(resourceId('Microsoft.Resources/deployments', 'search'), '2022-09-01').outputs.endpoint.value, '')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "hub",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('hubName')]"
                  },
                  "displayName": {
                    "value": "[parameters('hubName')]"
                  },
                  "keyVaultId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.keyVaultId.value]"
                  },
                  "storageAccountId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.storageAccountId.value]"
                  },
                  "containerRegistryId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.containerRegistryId.value]"
                  },
                  "applicationInsightsId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.applicationInsightsId.value]"
                  },
                  "openAiName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.openAiName.value]"
                  },
                  "openAiConnectionName": {
                    "value": "[parameters('openAiConnectionName')]"
                  },
                  "openAiContentSafetyConnectionName": {
                    "value": "[parameters('openAiContentSafetyConnectionName')]"
                  },
                  "aiSearchName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.searchServiceName.value]"
                  },
                  "aiSearchConnectionName": {
                    "value": "[parameters('searchConnectionName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "17273943691844935296"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The AI Foundry Hub Resource name"
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "[parameters('name')]",
                      "metadata": {
                        "description": "The display name of the AI Foundry Hub Resource"
                      }
                    },
                    "storageAccountId": {
                      "type": "string",
                      "metadata": {
                        "description": "The storage account ID to use for the AI Foundry Hub Resource"
                      }
                    },
                    "keyVaultId": {
                      "type": "string",
                      "metadata": {
                        "description": "The key vault ID to use for the AI Foundry Hub Resource"
                      }
                    },
                    "applicationInsightsId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The application insights ID to use for the AI Foundry Hub Resource"
                      }
                    },
                    "containerRegistryId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The container registry ID to use for the AI Foundry Hub Resource"
                      }
                    },
                    "openAiName": {
                      "type": "string",
                      "metadata": {
                        "description": "The OpenAI Cognitive Services account name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "openAiConnectionName": {
                      "type": "string",
                      "metadata": {
                        "description": "The OpenAI Cognitive Services account connection name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "aiSearchName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Azure Cognitive Search service name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "aiSearchConnectionName": {
                      "type": "string",
                      "metadata": {
                        "description": "The Azure Cognitive Search service connection name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "openAiContentSafetyConnectionName": {
                      "type": "string",
                      "metadata": {
                        "description": "The OpenAI Content Safety connection name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "metadata": {
                        "description": "The SKU name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "skuTier": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "allowedValues": [
                        "Basic",
                        "Free",
                        "Premium",
                        "Standard"
                      ],
                      "metadata": {
                        "description": "The SKU tier to use for the AI Foundry Hub Resource"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ],
                      "metadata": {
                        "description": "The public network access setting to use for the AI Foundry Hub Resource"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/connections",
                      "apiVersion": "2024-07-01-preview",
                      "name": "[format('{0}/{1}', parameters('name'), 'aoai-connection')]",
                      "properties": {
                        "category": "AIServices",
                        "authType": "ApiKey",
                        "isSharedToAll": true,
                        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').endpoint]",
                        "metadata": {
                          "ApiVersion": "2023-07-01-preview",
                          "ApiType": "azure",
                          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
                        },
                        "credentials": {
                          "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').key1]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/connections",
                      "apiVersion": "2024-07-01-preview",
                      "name": "[format('{0}/{1}', parameters('name'), parameters('openAiContentSafetyConnectionName'))]",
                      "properties": {
                        "category": "AzureOpenAI",
                        "authType": "ApiKey",
                        "isSharedToAll": true,
                        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').endpoints['Content Safety']]",
                        "metadata": {
                          "ApiVersion": "2023-07-01-preview",
                          "ApiType": "azure",
                          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
                        },
                        "credentials": {
                          "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').key1]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('aiSearchName')))]",
                      "type": "Microsoft.MachineLearningServices/workspaces/connections",
                      "apiVersion": "2024-07-01-preview",
                      "name": "[format('{0}/{1}', parameters('name'), parameters('aiSearchConnectionName'))]",
                      "properties": {
                        "category": "CognitiveSearch",
                        "authType": "ApiKey",
                        "isSharedToAll": true,
                        "target": "[format('https://{0}.search.windows.net/', parameters('aiSearchName'))]",
                        "credentials": {
                          "key": "[if(not(empty(parameters('aiSearchName'))), listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('aiSearchName')), '2021-04-01-preview').primaryKey, '')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces",
                      "apiVersion": "2024-07-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('skuName')]",
                        "tier": "[parameters('skuTier')]"
                      },
                      "kind": "Hub",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "friendlyName": "[parameters('displayName')]",
                        "storageAccount": "[parameters('storageAccountId')]",
                        "keyVault": "[parameters('keyVaultId')]",
                        "applicationInsights": "[if(not(empty(parameters('applicationInsightsId'))), parameters('applicationInsightsId'), null())]",
                        "containerRegistry": "[if(not(empty(parameters('containerRegistryId'))), parameters('containerRegistryId'), null())]",
                        "hbiWorkspace": false,
                        "managedNetwork": {
                          "isolationMode": "Disabled"
                        },
                        "v1LegacyMode": false,
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "discoveryUrl": "[format('https://{0}.api.azureml.ms/discovery', parameters('location'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name')), '2024-07-01-preview', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'hubDependencies')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "project",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('projectName')]"
                  },
                  "displayName": {
                    "value": "[parameters('projectName')]"
                  },
                  "hubName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.name.value]"
                  },
                  "keyVaultName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.keyVaultName.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "11240669496224994590"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "The AI Foundry Hub Resource name"
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "defaultValue": "[parameters('name')]",
                      "metadata": {
                        "description": "The display name of the AI Foundry Hub Resource"
                      }
                    },
                    "hubName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the AI Foundry Hub Resource where this project should be created"
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the key vault resource to grant access to the project"
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "metadata": {
                        "description": "The SKU name to use for the AI Foundry Hub Resource"
                      }
                    },
                    "skuTier": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "allowedValues": [
                        "Basic",
                        "Free",
                        "Premium",
                        "Standard"
                      ],
                      "metadata": {
                        "description": "The SKU tier to use for the AI Foundry Hub Resource"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ],
                      "metadata": {
                        "description": "The public network access setting to use for the AI Foundry Hub Resource"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces",
                      "apiVersion": "2024-01-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('skuName')]",
                        "tier": "[parameters('skuTier')]"
                      },
                      "kind": "Project",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "friendlyName": "[parameters('displayName')]",
                        "hbiWorkspace": false,
                        "v1LegacyMode": false,
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('hubName'))]"
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "keyvault-access",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "principalId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name')), '2024-01-01-preview', 'full').identity.principalId]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "15649900872986233495"
                            },
                            "description": "Assigns an Azure Key Vault access policy."
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "defaultValue": "add"
                            },
                            "keyVaultName": {
                              "type": "string"
                            },
                            "permissions": {
                              "type": "object",
                              "defaultValue": {
                                "secrets": [
                                  "get",
                                  "list"
                                ]
                              }
                            },
                            "principalId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/accessPolicies",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                              "properties": {
                                "accessPolicies": [
                                  {
                                    "objectId": "[parameters('principalId')]",
                                    "tenantId": "[subscription().tenantId]",
                                    "permissions": "[parameters('permissions')]"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "ml-service-role-data-scientist",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "principalId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name')), '2024-01-01-preview', 'full').identity.principalId]"
                          },
                          "roleDefinitionId": {
                            "value": "f6c7c914-8db3-469d-8ca1-694a8f32e121"
                          },
                          "principalType": {
                            "value": "ServicePrincipal"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "14223167216489085881"
                            },
                            "description": "Creates a role assignment for a service principal."
                          },
                          "parameters": {
                            "principalId": {
                              "type": "string"
                            },
                            "principalType": {
                              "type": "string",
                              "defaultValue": "ServicePrincipal",
                              "allowedValues": [
                                "Device",
                                "ForeignGroup",
                                "Group",
                                "ServicePrincipal",
                                "User"
                              ]
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "principalId": "[parameters('principalId')]",
                                "principalType": "[parameters('principalType')]",
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "ml-service-role-secrets-reader",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "principalId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name')), '2024-01-01-preview', 'full').identity.principalId]"
                          },
                          "roleDefinitionId": {
                            "value": "ea01e6af-a1c1-4350-9563-ad00f8c72ec5"
                          },
                          "principalType": {
                            "value": "ServicePrincipal"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "14223167216489085881"
                            },
                            "description": "Creates a role assignment for a service principal."
                          },
                          "parameters": {
                            "principalId": {
                              "type": "string"
                            },
                            "principalType": {
                              "type": "string",
                              "defaultValue": "ServicePrincipal",
                              "allowedValues": [
                                "Device",
                                "ForeignGroup",
                                "Group",
                                "ServicePrincipal",
                                "User"
                              ]
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "principalId": "[parameters('principalId')]",
                                "principalType": "[parameters('principalType')]",
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('name')), '2024-01-01-preview', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'hub')]",
                "[resourceId('Microsoft.Resources/deployments', 'hubDependencies')]"
              ]
            }
          ],
          "outputs": {
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]"
            },
            "hubName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.name.value]"
            },
            "hubPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hub'), '2022-09-01').outputs.principalId.value]"
            },
            "projectName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'project'), '2022-09-01').outputs.name.value]"
            },
            "projectPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'project'), '2022-09-01').outputs.principalId.value]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.keyVaultName.value]"
            },
            "keyVaultEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.keyVaultEndpoint.value]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.applicationInsightsName.value]"
            },
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]"
            },
            "containerRegistryName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.containerRegistryName.value]"
            },
            "containerRegistryEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.containerRegistryEndpoint.value]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.storageAccountName.value]"
            },
            "openAiName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.openAiName.value]"
            },
            "openAiEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.openAiEndpoint.value]"
            },
            "searchServiceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.searchServiceName.value]"
            },
            "searchServiceEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'hubDependencies'), '2022-09-01').outputs.searchServiceEndpoint.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": "[if(not(empty(parameters('cosmosAccountName'))), createObject('value', parameters('cosmosAccountName')), createObject('value', format('cosmos-contoso-{0}', variables('resourceToken'))))]",
          "databaseName": {
            "value": "contoso-outdoor"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('defaultExperience', 'Core (SQL)', 'hidden-cosmos-mmspecial', ''))]"
          },
          "containers": {
            "value": [
              {
                "name": "customers",
                "id": "customers",
                "partitionKey": "/id"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "704669550954465394"
            },
            "description": "Creates an Azure Cosmos DB for NoSQL account with a database."
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "databaseName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "principalIds": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "copy": {
                "name": "database::list",
                "count": "[length(parameters('containers'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1], parameters('containers')[copyIndex()].name)]",
              "properties": {
                "resource": {
                  "id": "[parameters('containers')[copyIndex()].id]",
                  "partitionKey": {
                    "paths": [
                      "[parameters('containers')[copyIndex()].partitionKey]"
                    ]
                  }
                },
                "options": {}
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('databaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cosmos-sql-account",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('accountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "14779585686709551971"
                    },
                    "description": "Creates an Azure Cosmos DB for NoSQL account."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "cosmos-account",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "kind": {
                            "value": "GlobalDocumentDB"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "6807738794019077675"
                            },
                            "description": "Creates an Azure Cosmos DB account."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "kind": {
                              "type": "string",
                              "allowedValues": [
                                "GlobalDocumentDB",
                                "MongoDB",
                                "Parse"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.DocumentDB/databaseAccounts",
                              "apiVersion": "2022-08-15",
                              "name": "[parameters('name')]",
                              "kind": "[parameters('kind')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "consistencyPolicy": {
                                  "defaultConsistencyLevel": "Session"
                                },
                                "locations": [
                                  {
                                    "locationName": "[parameters('location')]",
                                    "failoverPriority": 0,
                                    "isZoneRedundant": false
                                  }
                                ],
                                "databaseAccountOfferType": "Standard",
                                "enableAutomaticFailover": false,
                                "enableMultipleWriteLocations": false,
                                "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.2'), createObject())]",
                                "capabilities": [
                                  {
                                    "name": "EnableServerless"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {
                            "endpoint": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2022-08-15').documentEndpoint]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2022-09-01').outputs.endpoint.value]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2022-09-01').outputs.id.value]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2022-09-01').outputs.name.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cosmos-sql-role-definition",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "accountName": {
                    "value": "[parameters('accountName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "15433775834712200547"
                    },
                    "description": "Creates a SQL role definition under an Azure Cosmos DB account."
                  },
                  "parameters": {
                    "accountName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
                      "apiVersion": "2022-08-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]",
                      "properties": {
                        "assignableScopes": [
                          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                        ],
                        "permissions": [
                          {
                            "dataActions": [
                              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*",
                              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*"
                            ],
                            "notDataActions": []
                          }
                        ],
                        "roleName": "Reader Writer",
                        "type": "CustomRole"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1])]"
              ]
            },
            {
              "copy": {
                "name": "userRole",
                "count": "[length(parameters('principalIds'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "condition": "[not(empty(parameters('principalIds')[copyIndex()]))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('cosmos-sql-user-role-{0}', uniqueString(parameters('principalIds')[copyIndex()]))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "accountName": {
                    "value": "[parameters('accountName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-role-definition'), '2022-09-01').outputs.id.value]"
                  },
                  "principalId": {
                    "value": "[parameters('principalIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "9287160422728403181"
                    },
                    "description": "Creates a SQL role assignment under an Azure Cosmos DB account."
                  },
                  "parameters": {
                    "accountName": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
                      "apiVersion": "2022-05-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), guid(parameters('roleDefinitionId'), parameters('principalId'), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "roleDefinitionId": "[parameters('roleDefinitionId')]",
                        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1])]",
                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-role-definition')]"
              ]
            }
          ],
          "outputs": {
            "accountId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account'), '2022-09-01').outputs.id.value]"
            },
            "accountName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account'), '2022-09-01').outputs.name.value]"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('databaseName')]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account'), '2022-09-01').outputs.endpoint.value]"
            },
            "roleDefinitionId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-role-definition'), '2022-09-01').outputs.id.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-apps",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "app"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "containerAppsEnvironmentName": {
            "value": "[format('{0}-containerapps-env', variables('prefix'))]"
          },
          "containerRegistryName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.containerRegistryName.value]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "7435583217287460346"
            },
            "description": "Creates an Azure Container Registry and an Azure Container Apps environment."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "containerRegistryResourceGroupName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerRegistryAdminUserEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-apps-environment', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('logAnalyticsWorkspaceName')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "2752869305972816250"
                    },
                    "description": "Creates an Azure Container Apps environment."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the Application Insights resource"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Specifies if Dapr is enabled"
                      }
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Log Analytics workspace"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/managedEnvironments",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "appLogsConfiguration": {
                          "destination": "log-analytics",
                          "logAnalyticsConfiguration": {
                            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]",
                            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                          }
                        },
                        "daprAIInstrumentationKey": "[if(and(parameters('daprEnabled'), not(empty(parameters('applicationInsightsName')))), reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, '')]"
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2023-05-01').defaultDomain]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-registry', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "adminUserEnabled": {
                    "value": "[parameters('containerRegistryAdminUserEnabled')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "5579757098889212448"
                    },
                    "description": "Creates an Azure Container Registry."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "adminUserEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether admin user is enabled"
                      }
                    },
                    "anonymousPullEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether anonymous pull is enabled"
                      }
                    },
                    "azureADAuthenticationAsArmPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "status": "enabled"
                      },
                      "metadata": {
                        "description": "Azure ad authentication as arm policy settings"
                      }
                    },
                    "dataEndpointEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether data endpoint is enabled"
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "defaultValue": {
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Encryption settings"
                      }
                    },
                    "exportPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "status": "enabled"
                      },
                      "metadata": {
                        "description": "Export policy settings"
                      }
                    },
                    "metadataSearch": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Metadata search settings"
                      }
                    },
                    "networkRuleBypassOptions": {
                      "type": "string",
                      "defaultValue": "AzureServices",
                      "metadata": {
                        "description": "Options for bypassing network rules"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "metadata": {
                        "description": "Public network access setting"
                      }
                    },
                    "quarantinePolicy": {
                      "type": "object",
                      "defaultValue": {
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Quarantine policy settings"
                      }
                    },
                    "retentionPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "days": 7,
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Retention policy settings"
                      }
                    },
                    "scopeMaps": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Scope maps setting"
                      }
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Basic"
                      },
                      "metadata": {
                        "description": "SKU settings"
                      }
                    },
                    "softDeletePolicy": {
                      "type": "object",
                      "defaultValue": {
                        "retentionDays": 7,
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Soft delete policy settings"
                      }
                    },
                    "trustPolicy": {
                      "type": "object",
                      "defaultValue": {
                        "type": "Notary",
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Trust policy settings"
                      }
                    },
                    "zoneRedundancy": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Zone redundancy setting"
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The log analytics workspace ID used for logging and monitoring"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "containerRegistry::scopeMap",
                        "count": "[length(parameters('scopeMaps'))]"
                      },
                      "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
                      "apiVersion": "2023-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('name'), parameters('scopeMaps')[copyIndex()].name)]",
                      "properties": "[parameters('scopeMaps')[copyIndex()].properties]",
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2023-11-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "adminUserEnabled": "[parameters('adminUserEnabled')]",
                        "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                        "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                        "encryption": "[parameters('encryption')]",
                        "metadataSearch": "[parameters('metadataSearch')]",
                        "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                        "policies": {
                          "quarantinePolicy": "[parameters('quarantinePolicy')]",
                          "trustPolicy": "[parameters('trustPolicy')]",
                          "retentionPolicy": "[parameters('retentionPolicy')]",
                          "exportPolicy": "[parameters('exportPolicy')]",
                          "azureADAuthenticationAsArmPolicy": "[parameters('azureADAuthenticationAsArmPolicy')]",
                          "softDeletePolicy": "[parameters('softDeletePolicy')]"
                        },
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "zoneRedundancy": "[parameters('zoneRedundancy')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('workspaceId')))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
                      "name": "registry-diagnostics",
                      "properties": {
                        "workspaceId": "[parameters('workspaceId')]",
                        "logs": [
                          {
                            "category": "ContainerRegistryRepositoryEvents",
                            "enabled": true
                          },
                          {
                            "category": "ContainerRegistryLoginEvents",
                            "enabled": true
                          }
                        ],
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true,
                            "timeGrain": "PT1M"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                    },
                    "loginServer": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.defaultDomain.value]"
            },
            "environmentName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "environmentId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.id.value]"
            },
            "registryLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.loginServer.value]"
            },
            "registryName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aca",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[replace(format('{0}-ca', take(variables('prefix'), 19)), '--', '-')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "identityName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity'), '2022-09-01').outputs.managedIdentityName.value]"
          },
          "identityId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity'), '2022-09-01').outputs.managedIdentityClientId.value]"
          },
          "containerAppsEnvironmentName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
          },
          "containerRegistryName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryName.value]"
          },
          "openAiDeploymentName": "[if(not(empty(parameters('openAiDeploymentName'))), createObject('value', parameters('openAiDeploymentName')), createObject('value', 'gpt-4o-mini'))]",
          "openAiEmbeddingDeploymentName": {
            "value": "[parameters('openAiEmbeddingDeploymentName')]"
          },
          "openAiEndpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.openAiEndpoint.value]"
          },
          "openAiType": {
            "value": "[parameters('openAiType')]"
          },
          "openAiApiVersion": {
            "value": "[parameters('openAiApiVersion')]"
          },
          "aiSearchEndpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.searchServiceEndpoint.value]"
          },
          "aiSearchIndexName": {
            "value": "[parameters('aiSearchIndexName')]"
          },
          "cosmosEndpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.endpoint.value]"
          },
          "cosmosDatabaseName": {
            "value": "[parameters('cosmosDatabaseName')]"
          },
          "cosmosContainerName": {
            "value": "[parameters('cosmosContainerName')]"
          },
          "appinsights_Connectionstring": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "15332308913476155123"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "identityName": {
              "type": "string"
            },
            "identityId": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "aca"
            },
            "openAiDeploymentName": {
              "type": "string"
            },
            "openAiEndpoint": {
              "type": "string"
            },
            "openAiApiVersion": {
              "type": "string"
            },
            "openAiEmbeddingDeploymentName": {
              "type": "string"
            },
            "openAiType": {
              "type": "string"
            },
            "cosmosEndpoint": {
              "type": "string"
            },
            "cosmosDatabaseName": {
              "type": "string"
            },
            "cosmosContainerName": {
              "type": "string"
            },
            "aiSearchEndpoint": {
              "type": "string"
            },
            "aiSearchIndexName": {
              "type": "string"
            },
            "appinsights_Connectionstring": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-app-module', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "identityName": {
                    "value": "[parameters('identityName')]"
                  },
                  "identityType": {
                    "value": "UserAssigned"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "env": {
                    "value": [
                      {
                        "name": "AZURE_CLIENT_ID",
                        "value": "[parameters('identityId')]"
                      },
                      {
                        "name": "COSMOS_ENDPOINT",
                        "value": "[parameters('cosmosEndpoint')]"
                      },
                      {
                        "name": "AZURE_COSMOS_NAME",
                        "value": "[parameters('cosmosDatabaseName')]"
                      },
                      {
                        "name": "COSMOS_CONTAINER",
                        "value": "[parameters('cosmosContainerName')]"
                      },
                      {
                        "name": "AZURE_SEARCH_ENDPOINT",
                        "value": "[parameters('aiSearchEndpoint')]"
                      },
                      {
                        "name": "AZUREAISEARCH__INDEX_NAME",
                        "value": "[parameters('aiSearchIndexName')]"
                      },
                      {
                        "name": "OPENAI_TYPE",
                        "value": "[parameters('openAiType')]"
                      },
                      {
                        "name": "AZURE_OPENAI_API_VERSION",
                        "value": "[parameters('openAiApiVersion')]"
                      },
                      {
                        "name": "AZURE_OPENAI_ENDPOINT",
                        "value": "[parameters('openAiEndpoint')]"
                      },
                      {
                        "name": "AZURE_OPENAI_CHAT_DEPLOYMENT",
                        "value": "[parameters('openAiDeploymentName')]"
                      },
                      {
                        "name": "AZURE_EMBEDDING_NAME",
                        "value": "[parameters('openAiEmbeddingDeploymentName')]"
                      },
                      {
                        "name": "APPINSIGHTS_CONNECTIONSTRING",
                        "value": "[parameters('appinsights_Connectionstring')]"
                      }
                    ]
                  },
                  "targetPort": {
                    "value": 80
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.177.2456",
                      "templateHash": "12520553215407599897"
                    },
                    "description": "Creates or updates an existing Azure Container App."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "metadata": {
                        "description": "The environment name for the container apps"
                      }
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "The number of CPU cores allocated to a single container instance, e.g., 0.5"
                      }
                    },
                    "containerMaxReplicas": {
                      "type": "int",
                      "defaultValue": 10,
                      "minValue": 1,
                      "metadata": {
                        "description": "The maximum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "The amount of memory allocated to a single container instance, e.g., 1Gi"
                      }
                    },
                    "containerMinReplicas": {
                      "type": "int",
                      "defaultValue": 1,
                      "minValue": 1,
                      "metadata": {
                        "description": "The minimum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main",
                      "metadata": {
                        "description": "The name of the container"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container registry"
                      }
                    },
                    "containerRegistryHostSuffix": {
                      "type": "string",
                      "defaultValue": "azurecr.io",
                      "metadata": {
                        "description": "Hostname suffix for container registry. Set when deploying to sovereign clouds"
                      }
                    },
                    "daprAppProtocol": {
                      "type": "string",
                      "defaultValue": "http",
                      "allowedValues": [
                        "http",
                        "grpc"
                      ],
                      "metadata": {
                        "description": "The protocol used by Dapr to connect to the app, e.g., HTTP or gRPC"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable or disable Dapr for the container app"
                      }
                    },
                    "daprAppId": {
                      "type": "string",
                      "defaultValue": "[parameters('containerName')]",
                      "metadata": {
                        "description": "The Dapr app ID"
                      }
                    },
                    "ingressEnabled": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if Ingress is enabled for the container app"
                      }
                    },
                    "identityType": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "metadata": {
                        "description": "The type of identity for the resource"
                      }
                    },
                    "identityName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the user-assigned identity"
                      }
                    },
                    "imageName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container image"
                      }
                    },
                    "secrets": {
                      "type": "secureObject",
                      "defaultValue": {},
                      "metadata": {
                        "description": "The secrets required for the container"
                      }
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The environment variables for the container"
                      }
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if the resource ingress is exposed externally"
                      }
                    },
                    "serviceBinds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The service binds associated with the container"
                      }
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80,
                      "metadata": {
                        "description": "The target port for the container"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-update', deployment().name)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "identityType": {
                            "value": "[parameters('identityType')]"
                          },
                          "identityName": {
                            "value": "[parameters('identityName')]"
                          },
                          "ingressEnabled": {
                            "value": "[parameters('ingressEnabled')]"
                          },
                          "containerName": {
                            "value": "[parameters('containerName')]"
                          },
                          "containerAppsEnvironmentName": {
                            "value": "[parameters('containerAppsEnvironmentName')]"
                          },
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "containerRegistryHostSuffix": {
                            "value": "[parameters('containerRegistryHostSuffix')]"
                          },
                          "containerCpuCoreCount": {
                            "value": "[parameters('containerCpuCoreCount')]"
                          },
                          "containerMemory": {
                            "value": "[parameters('containerMemory')]"
                          },
                          "containerMinReplicas": {
                            "value": "[parameters('containerMinReplicas')]"
                          },
                          "containerMaxReplicas": {
                            "value": "[parameters('containerMaxReplicas')]"
                          },
                          "daprEnabled": {
                            "value": "[parameters('daprEnabled')]"
                          },
                          "daprAppId": {
                            "value": "[parameters('daprAppId')]"
                          },
                          "daprAppProtocol": {
                            "value": "[parameters('daprAppProtocol')]"
                          },
                          "secrets": {
                            "value": "[parameters('secrets')]"
                          },
                          "external": {
                            "value": "[parameters('external')]"
                          },
                          "env": {
                            "value": "[parameters('env')]"
                          },
                          "imageName": {
                            "value": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest"
                          },
                          "targetPort": {
                            "value": "[parameters('targetPort')]"
                          },
                          "serviceBinds": {
                            "value": "[parameters('serviceBinds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.36.177.2456",
                              "templateHash": "16428415284199647071"
                            },
                            "description": "Creates a container app in an Azure Container App environment."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Allowed origins"
                              }
                            },
                            "containerAppsEnvironmentName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the environment for container apps"
                              }
                            },
                            "containerCpuCoreCount": {
                              "type": "string",
                              "defaultValue": "0.5",
                              "metadata": {
                                "description": "CPU cores allocated to a single container instance, e.g., 0.5"
                              }
                            },
                            "containerMaxReplicas": {
                              "type": "int",
                              "defaultValue": 10,
                              "minValue": 1,
                              "metadata": {
                                "description": "The maximum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerMemory": {
                              "type": "string",
                              "defaultValue": "1.0Gi",
                              "metadata": {
                                "description": "Memory allocated to a single container instance, e.g., 1Gi"
                              }
                            },
                            "containerMinReplicas": {
                              "type": "int",
                              "defaultValue": 1,
                              "metadata": {
                                "description": "The minimum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerName": {
                              "type": "string",
                              "defaultValue": "main",
                              "metadata": {
                                "description": "The name of the container"
                              }
                            },
                            "containerRegistryName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container registry"
                              }
                            },
                            "containerRegistryHostSuffix": {
                              "type": "string",
                              "defaultValue": "azurecr.io",
                              "metadata": {
                                "description": "Hostname suffix for container registry. Set when deploying to sovereign clouds"
                              }
                            },
                            "daprAppProtocol": {
                              "type": "string",
                              "defaultValue": "http",
                              "allowedValues": [
                                "http",
                                "grpc"
                              ],
                              "metadata": {
                                "description": "The protocol used by Dapr to connect to the app, e.g., http or grpc"
                              }
                            },
                            "daprAppId": {
                              "type": "string",
                              "defaultValue": "[parameters('containerName')]",
                              "metadata": {
                                "description": "The Dapr app ID"
                              }
                            },
                            "daprEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Enable Dapr"
                              }
                            },
                            "env": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The environment variables for the container"
                              }
                            },
                            "external": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if the resource ingress is exposed externally"
                              }
                            },
                            "identityName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the user-assigned identity"
                              }
                            },
                            "identityType": {
                              "type": "string",
                              "defaultValue": "None",
                              "allowedValues": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "metadata": {
                                "description": "The type of identity for the resource"
                              }
                            },
                            "imageName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container image"
                              }
                            },
                            "ingressEnabled": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if Ingress is enabled for the container app"
                              }
                            },
                            "revisionMode": {
                              "type": "string",
                              "defaultValue": "Single"
                            },
                            "secrets": {
                              "type": "secureObject",
                              "defaultValue": {},
                              "metadata": {
                                "description": "The secrets required for the container"
                              }
                            },
                            "serviceBinds": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The service binds associated with the container"
                              }
                            },
                            "serviceType": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container apps add-on to use. e.g. redis"
                              }
                            },
                            "targetPort": {
                              "type": "int",
                              "defaultValue": 80,
                              "metadata": {
                                "description": "The target port for the container"
                              }
                            }
                          },
                          "variables": {
                            "usePrivateRegistry": "[and(not(empty(parameters('identityName'))), not(empty(parameters('containerRegistryName'))))]",
                            "normalizedIdentityType": "[if(not(empty(parameters('identityName'))), 'UserAssigned', parameters('identityType'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.App/containerApps",
                              "apiVersion": "2023-05-02-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[variables('normalizedIdentityType')]",
                                "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(variables('normalizedIdentityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
                              },
                              "properties": {
                                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                                "configuration": {
                                  "copy": [
                                    {
                                      "name": "secrets",
                                      "count": "[length(items(parameters('secrets')))]",
                                      "input": {
                                        "name": "[items(parameters('secrets'))[copyIndex('secrets')].key]",
                                        "value": "[items(parameters('secrets'))[copyIndex('secrets')].value]"
                                      }
                                    }
                                  ],
                                  "activeRevisionsMode": "[parameters('revisionMode')]",
                                  "ingress": "[if(parameters('ingressEnabled'), createObject('external', parameters('external'), 'targetPort', parameters('targetPort'), 'transport', 'auto', 'corsPolicy', createObject('allowedOrigins', union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins')))), null())]",
                                  "dapr": "[if(parameters('daprEnabled'), createObject('enabled', true(), 'appId', parameters('daprAppId'), 'appProtocol', parameters('daprAppProtocol'), 'appPort', if(parameters('ingressEnabled'), parameters('targetPort'), 0)), createObject('enabled', false()))]",
                                  "service": "[if(not(empty(parameters('serviceType'))), createObject('type', parameters('serviceType')), null())]",
                                  "registries": "[if(variables('usePrivateRegistry'), createArray(createObject('server', format('{0}.{1}', parameters('containerRegistryName'), parameters('containerRegistryHostSuffix')), 'identity', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))), createArray())]"
                                },
                                "template": {
                                  "serviceBinds": "[if(not(empty(parameters('serviceBinds'))), parameters('serviceBinds'), null())]",
                                  "containers": [
                                    {
                                      "image": "[if(not(empty(parameters('imageName'))), parameters('imageName'), 'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest')]",
                                      "name": "[parameters('containerName')]",
                                      "env": "[parameters('env')]",
                                      "resources": {
                                        "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                        "memory": "[parameters('containerMemory')]"
                                      }
                                    }
                                  ],
                                  "scale": {
                                    "minReplicas": "[parameters('containerMinReplicas')]",
                                    "maxReplicas": "[parameters('containerMaxReplicas')]"
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', format('{0}-registry-access', deployment().name))]"
                              ]
                            },
                            {
                              "condition": "[variables('usePrivateRegistry')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-registry-access', deployment().name)]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "containerRegistryName": {
                                    "value": "[parameters('containerRegistryName')]"
                                  },
                                  "principalId": "[if(variables('usePrivateRegistry'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', ''))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.36.177.2456",
                                      "templateHash": "12489844250536530841"
                                    },
                                    "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                                  },
                                  "parameters": {
                                    "containerRegistryName": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2022-04-01",
                                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                                      "properties": {
                                        "roleDefinitionId": "[variables('acrPullRole')]",
                                        "principalType": "ServicePrincipal",
                                        "principalId": "[parameters('principalId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "defaultDomain": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName')), '2023-05-01').defaultDomain]"
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(variables('normalizedIdentityType'), 'None'), '', if(empty(parameters('identityName')), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-02-preview', 'full').identity.principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId))]"
                            },
                            "imageName": {
                              "type": "string",
                              "value": "[parameters('imageName')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "serviceBind": {
                              "type": "object",
                              "value": "[if(not(empty(parameters('serviceType'))), createObject('serviceId', resourceId('Microsoft.App/containerApps', parameters('name')), 'name', parameters('name')), createObject())]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[if(parameters('ingressEnabled'), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-05-02-preview').configuration.ingress.fqdn), '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.defaultDomain.value]"
                    },
                    "imageName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.imageName.value]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.uri.value]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_ACA_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2022-09-01').outputs.name.value]"
            },
            "SERVICE_ACA_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2022-09-01').outputs.uri.value]"
            },
            "SERVICE_ACA_IMAGE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2022-09-01').outputs.imageName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai-search-index-data-contributor",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity'), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14223167216489085881"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai-search-service-contributor",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity'), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14223167216489085881"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos-account-role",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity'), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "databaseAccountId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountId.value]"
          },
          "databaseAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "5123452191935180105"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "databaseAccountId": {
              "type": "string"
            },
            "databaseAccountName": {
              "type": "string"
            }
          },
          "variables": {
            "roleDefinitionReader": "00000000-0000-0000-0000-000000000001",
            "roleDefinitionContributor": "00000000-0000-0000-0000-000000000002",
            "roleDefinitionId": "[guid('sql-role-definition-', parameters('principalId'), parameters('databaseAccountId'))]",
            "roleAssignmentId": "[guid(variables('roleDefinitionId'), parameters('principalId'), parameters('databaseAccountId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', parameters('databaseAccountName'), variables('roleAssignmentId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[format('/{0}/resourceGroups/{1}/providers/Microsoft.DocumentDB/databaseAccounts/{2}/sqlRoleDefinitions/{3}', subscription().id, resourceGroup().name, parameters('databaseAccountName'), variables('roleDefinitionContributor'))]",
                "scope": "[parameters('databaseAccountId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appinsights-account-role",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity'), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "3913510d-42f4-4e42-8a64-420c390055eb"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14223167216489085881"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'managed-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-ai-search-index-data-contributor",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
          },
          "principalType": {
            "value": "[variables('principalType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14223167216489085881"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-ai-search-service-contributor",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
          },
          "principalType": {
            "value": "[variables('principalType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14223167216489085881"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-openai-user",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "5e0bd9bd-7b93-4f28-af87-19fc36ad61bd"
          },
          "principalType": {
            "value": "[variables('principalType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14223167216489085881"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "user-cosmos-account-role",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "databaseAccountId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountId.value]"
          },
          "databaseAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "5123452191935180105"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "databaseAccountId": {
              "type": "string"
            },
            "databaseAccountName": {
              "type": "string"
            }
          },
          "variables": {
            "roleDefinitionReader": "00000000-0000-0000-0000-000000000001",
            "roleDefinitionContributor": "00000000-0000-0000-0000-000000000002",
            "roleDefinitionId": "[guid('sql-role-definition-', parameters('principalId'), parameters('databaseAccountId'))]",
            "roleAssignmentId": "[guid(variables('roleDefinitionId'), parameters('principalId'), parameters('databaseAccountId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', parameters('databaseAccountName'), variables('roleAssignmentId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[format('/{0}/resourceGroups/{1}/providers/Microsoft.DocumentDB/databaseAccounts/{2}/sqlRoleDefinitions/{3}', subscription().id, resourceGroup().name, parameters('databaseAccountName'), variables('roleDefinitionContributor'))]",
                "scope": "[parameters('databaseAccountId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[format('rg-{0}', parameters('environmentName'))]"
    },
    "AZURE_OPENAI_CHAT_DEPLOYMENT": {
      "type": "string",
      "value": "[parameters('openAiDeploymentName')]"
    },
    "AZURE_OPENAI_API_VERSION": {
      "type": "string",
      "value": "[parameters('openAiApiVersion')]"
    },
    "AZURE_OPENAI_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.openAiEndpoint.value]"
    },
    "AZURE_OPENAI_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.openAiName.value]"
    },
    "AZURE_OPENAI_RESOURCE_GROUP": {
      "type": "string",
      "value": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), format('rg-{0}', parameters('environmentName')))]"
    },
    "AZURE_OPENAI_RESOURCE_GROUP_LOCATION": {
      "type": "string",
      "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), format('rg-{0}', parameters('environmentName')))), '2021-04-01', 'full').location]"
    },
    "SERVICE_ACA_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'aca'), '2022-09-01').outputs.SERVICE_ACA_NAME.value]"
    },
    "SERVICE_ACA_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'aca'), '2022-09-01').outputs.SERVICE_ACA_URI.value]"
    },
    "SERVICE_ACA_IMAGE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'aca'), '2022-09-01').outputs.SERVICE_ACA_IMAGE_NAME.value]"
    },
    "AZURE_CONTAINER_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryLoginServer.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryName.value]"
    },
    "APPINSIGHTS_CONNECTIONSTRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
    },
    "OPENAI_TYPE": {
      "type": "string",
      "value": "azure"
    },
    "AZURE_EMBEDDING_NAME": {
      "type": "string",
      "value": "[parameters('openAiEmbeddingDeploymentName')]"
    },
    "COSMOS_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_COSMOS_NAME": {
      "type": "string",
      "value": "[parameters('cosmosDatabaseName')]"
    },
    "COSMOS_CONTAINER": {
      "type": "string",
      "value": "[parameters('cosmosContainerName')]"
    },
    "AZURE_SEARCH_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.searchServiceEndpoint.value]"
    },
    "AZURE_SEARCH_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.searchServiceName.value]"
    }
  }
}